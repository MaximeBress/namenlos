// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismic from "@prismicio/client";

type Simplify<T> = { [KeyType in keyof T]: T[KeyType] };

type PickContentRelationshipFieldData<
  TRelationship extends
    | prismic.CustomTypeModelFetchCustomTypeLevel1
    | prismic.CustomTypeModelFetchCustomTypeLevel2
    | prismic.CustomTypeModelFetchGroupLevel1
    | prismic.CustomTypeModelFetchGroupLevel2,
  TData extends Record<
    string,
    | prismic.AnyRegularField
    | prismic.GroupField
    | prismic.NestedGroupField
    | prismic.SliceZone
  >,
  TLang extends string,
> =
  // Content relationship fields
  {
    [TSubRelationship in Extract<
      TRelationship["fields"][number],
      prismic.CustomTypeModelFetchContentRelationshipLevel1
    > as TSubRelationship["id"]]: ContentRelationshipFieldWithData<
      TSubRelationship["customtypes"],
      TLang
    >;
  } & // Group
  {
    [TGroup in Extract<
      TRelationship["fields"][number],
      | prismic.CustomTypeModelFetchGroupLevel1
      | prismic.CustomTypeModelFetchGroupLevel2
    > as TGroup["id"]]: TData[TGroup["id"]] extends prismic.GroupField<
      infer TGroupData
    >
      ? prismic.GroupField<
          PickContentRelationshipFieldData<TGroup, TGroupData, TLang>
        >
      : never;
  } & // Other fields
  {
    [TFieldKey in Extract<
      TRelationship["fields"][number],
      string
    >]: TFieldKey extends keyof TData ? TData[TFieldKey] : never;
  };

type ContentRelationshipFieldWithData<
  TCustomType extends
    | readonly (prismic.CustomTypeModelFetchCustomTypeLevel1 | string)[]
    | readonly (prismic.CustomTypeModelFetchCustomTypeLevel2 | string)[],
  TLang extends string = string,
> = {
  [ID in Exclude<
    TCustomType[number],
    string
  >["id"]]: prismic.ContentRelationshipField<
    ID,
    TLang,
    PickContentRelationshipFieldData<
      Extract<TCustomType[number], { id: ID }>,
      Extract<prismic.Content.AllDocumentTypes, { type: ID }>["data"],
      TLang
    >
  >;
}[Exclude<TCustomType[number], string>["id"]];

type AgencyDocumentDataSlicesSlice =
  | TexteSlice
  | CarouselGallerySlice
  | FeaturedContentGallerySlice
  | HeroSlice
  | CardWithCategorySlice
  | CallToActionSlice
  | AlternateGridSlice;

/**
 * Content for Agence documents
 */
interface AgencyDocumentData {
  /**
   * Slice Zone field in *Agence*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: agency.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/slices
   */
  slices: prismic.SliceZone<AgencyDocumentDataSlicesSlice> /**
   * Meta Title field in *Agence*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A title of the page used for social media and search engines
   * - **API ID Path**: agency.meta_title
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/fields/text
   */;
  meta_title: prismic.KeyTextField;

  /**
   * Meta Description field in *Agence*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A brief summary of the page
   * - **API ID Path**: agency.meta_description
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  meta_description: prismic.KeyTextField;

  /**
   * Meta Image field in *Agence*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: agency.meta_image
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  meta_image: prismic.ImageField<never>;
}

/**
 * Agence document from Prismic
 *
 * - **API ID**: `agency`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/content-modeling
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type AgencyDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithoutUID<
    Simplify<AgencyDocumentData>,
    "agency",
    Lang
  >;

type HomepageDocumentDataSlicesSlice =
  | CallToActionSlice
  | AlternateGridSlice
  | CarouselGallerySlice
  | CardWithCategorySlice
  | FeaturedContentGallerySlice
  | TexteSlice
  | HeroSlice;

/**
 * Content for Accueil documents
 */
interface HomepageDocumentData {
  /**
   * Slice Zone field in *Accueil*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: homepage.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/slices
   */
  slices: prismic.SliceZone<HomepageDocumentDataSlicesSlice> /**
   * Meta Title field in *Accueil*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A title of the page used for social media and search engines
   * - **API ID Path**: homepage.meta_title
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/fields/text
   */;
  meta_title: prismic.KeyTextField;

  /**
   * Meta Description field in *Accueil*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A brief summary of the page
   * - **API ID Path**: homepage.meta_description
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  meta_description: prismic.KeyTextField;

  /**
   * Meta Image field in *Accueil*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: homepage.meta_image
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  meta_image: prismic.ImageField<never>;
}

/**
 * Accueil document from Prismic
 *
 * - **API ID**: `homepage`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/content-modeling
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type HomepageDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithoutUID<
    Simplify<HomepageDocumentData>,
    "homepage",
    Lang
  >;

type LayoutDocumentDataSlicesSlice = NavigationMenuSlice;

/**
 * Content for Layout documents
 */
interface LayoutDocumentData {
  /**
   * Slice Zone field in *Layout*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: layout.slices[]
   * - **Tab**: Header
   * - **Documentation**: https://prismic.io/docs/slices
   */
  slices: prismic.SliceZone<LayoutDocumentDataSlicesSlice>;
}

/**
 * Layout document from Prismic
 *
 * - **API ID**: `layout`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/content-modeling
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type LayoutDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithoutUID<
    Simplify<LayoutDocumentData>,
    "layout",
    Lang
  >;

type ProjectsDocumentDataSlicesSlice = never;

/**
 * Content for Projets documents
 */
interface ProjectsDocumentData {
  /**
   * Couverture field in *Projets*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: projects.cover
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  cover: prismic.ImageField<never>;

  /**
   * Titre field in *Projets*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: projects.title
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  title: prismic.KeyTextField;

  /**
   * Slice Zone field in *Projets*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: projects.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/slices
   */
  slices: prismic.SliceZone<ProjectsDocumentDataSlicesSlice> /**
   * Meta Title field in *Projets*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A title of the page used for social media and search engines
   * - **API ID Path**: projects.meta_title
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/fields/text
   */;
  meta_title: prismic.KeyTextField;

  /**
   * Meta Description field in *Projets*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A brief summary of the page
   * - **API ID Path**: projects.meta_description
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  meta_description: prismic.KeyTextField;

  /**
   * Meta Image field in *Projets*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: projects.meta_image
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  meta_image: prismic.ImageField<never>;
}

/**
 * Projets document from Prismic
 *
 * - **API ID**: `projects`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/content-modeling
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type ProjectsDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithoutUID<
    Simplify<ProjectsDocumentData>,
    "projects",
    Lang
  >;

type ProjetDocumentDataSlicesSlice =
  | TexteSlice
  | CallToActionSlice
  | CarouselGallerySlice
  | FeaturedContentGallerySlice
  | CardWithCategorySlice
  | AlternateGridSlice;

/**
 * Content for Projet documents
 */
interface ProjetDocumentData {
  /**
   * Couverture field in *Projet*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: projet.cover
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  cover: prismic.ImageField<never>;

  /**
   * Titre field in *Projet*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: projet.title
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  title: prismic.KeyTextField;

  /**
   * Slice Zone field in *Projet*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: projet.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/slices
   */
  slices: prismic.SliceZone<ProjetDocumentDataSlicesSlice> /**
   * Meta Title field in *Projet*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A title of the page used for social media and search engines
   * - **API ID Path**: projet.meta_title
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/fields/text
   */;
  meta_title: prismic.KeyTextField;

  /**
   * Meta Description field in *Projet*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A brief summary of the page
   * - **API ID Path**: projet.meta_description
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  meta_description: prismic.KeyTextField;
}

/**
 * Projet document from Prismic
 *
 * - **API ID**: `projet`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/content-modeling
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type ProjetDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<Simplify<ProjetDocumentData>, "projet", Lang>;

export type AllDocumentTypes =
  | AgencyDocument
  | HomepageDocument
  | LayoutDocument
  | ProjectsDocument
  | ProjetDocument;

/**
 * Item in *AlternateGrid → Image Right → Primary → items*
 */
export interface AlternateGridSliceImageRightPrimaryItemsItem {
  /**
   * title field in *AlternateGrid → Image Right → Primary → items*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: alternate_grid.imageRight.primary.items[].title
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  title: prismic.RichTextField;

  /**
   * description field in *AlternateGrid → Image Right → Primary → items*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: alternate_grid.imageRight.primary.items[].description
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  description: prismic.RichTextField;
}

/**
 * Primary content in *AlternateGrid → Default → Primary*
 */
export interface AlternateGridSliceDefaultPrimary {
  /**
   * description field in *AlternateGrid → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: alternate_grid.default.primary.description
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  description: prismic.RichTextField;

  /**
   * image field in *AlternateGrid → Default → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: alternate_grid.default.primary.image
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  image: prismic.ImageField<never>;
}

/**
 * Default variation for AlternateGrid Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type AlternateGridSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<AlternateGridSliceDefaultPrimary>,
  never
>;

/**
 * Primary content in *AlternateGrid → Image Right → Primary*
 */
export interface AlternateGridSliceImageRightPrimary {
  /**
   * eyebrowHeadline field in *AlternateGrid → Image Right → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: Eyebrow
   * - **API ID Path**: alternate_grid.imageRight.primary.eyebrowHeadline
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  eyebrowHeadline: prismic.KeyTextField;

  /**
   * title field in *AlternateGrid → Image Right → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: alternate_grid.imageRight.primary.title
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  title: prismic.RichTextField;

  /**
   * description field in *AlternateGrid → Image Right → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: alternate_grid.imageRight.primary.description
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  description: prismic.RichTextField;

  /**
   * image field in *AlternateGrid → Image Right → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: alternate_grid.imageRight.primary.image
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  image: prismic.ImageField<never>;

  /**
   * items field in *AlternateGrid → Image Right → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: alternate_grid.imageRight.primary.items[]
   * - **Documentation**: https://prismic.io/docs/fields/repeatable-group
   */
  items: prismic.GroupField<
    Simplify<AlternateGridSliceImageRightPrimaryItemsItem>
  >;
}

/**
 * Image Right variation for AlternateGrid Slice
 *
 * - **API ID**: `imageRight`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type AlternateGridSliceImageRight = prismic.SharedSliceVariation<
  "imageRight",
  Simplify<AlternateGridSliceImageRightPrimary>,
  never
>;

/**
 * Slice variation for *AlternateGrid*
 */
type AlternateGridSliceVariation =
  | AlternateGridSliceDefault
  | AlternateGridSliceImageRight;

/**
 * AlternateGrid Shared Slice
 *
 * - **API ID**: `alternate_grid`
 * - **Description**: AlternateGrid
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type AlternateGridSlice = prismic.SharedSlice<
  "alternate_grid",
  AlternateGridSliceVariation
>;

/**
 * Primary content in *CallToAction → Default → Primary*
 */
export interface CallToActionSliceDefaultPrimary {
  /**
   * Image field in *CallToAction → Default → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: call_to_action.default.primary.image
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  image: prismic.ImageField<never>;

  /**
   * title field in *CallToAction → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: call_to_action.default.primary.title
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  title: prismic.RichTextField;

  /**
   * paragraph field in *CallToAction → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: call_to_action.default.primary.paragraph
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  paragraph: prismic.RichTextField;

  /**
   * buttonLink field in *CallToAction → Default → Primary*
   *
   * - **Field Type**: Link
   * - **Placeholder**: Redirect URL for CTA button
   * - **API ID Path**: call_to_action.default.primary.buttonLink
   * - **Documentation**: https://prismic.io/docs/fields/link
   */
  buttonLink: prismic.LinkField<
    string,
    string,
    unknown,
    prismic.FieldState,
    never
  >;
}

/**
 * Default variation for CallToAction Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type CallToActionSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<CallToActionSliceDefaultPrimary>,
  never
>;

/**
 * Primary content in *CallToAction → AlignLeft → Primary*
 */
export interface CallToActionSliceAlignLeftPrimary {
  /**
   * Image field in *CallToAction → AlignLeft → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: call_to_action.alignLeft.primary.image
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  image: prismic.ImageField<never>;

  /**
   * title field in *CallToAction → AlignLeft → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: call_to_action.alignLeft.primary.title
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  title: prismic.RichTextField;

  /**
   * paragraph field in *CallToAction → AlignLeft → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: call_to_action.alignLeft.primary.paragraph
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  paragraph: prismic.RichTextField;

  /**
   * buttonLink field in *CallToAction → AlignLeft → Primary*
   *
   * - **Field Type**: Link
   * - **Placeholder**: Redirect URL for CTA button
   * - **API ID Path**: call_to_action.alignLeft.primary.buttonLink
   * - **Documentation**: https://prismic.io/docs/fields/link
   */
  buttonLink: prismic.LinkField<
    string,
    string,
    unknown,
    prismic.FieldState,
    never
  >;
}

/**
 * AlignLeft variation for CallToAction Slice
 *
 * - **API ID**: `alignLeft`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type CallToActionSliceAlignLeft = prismic.SharedSliceVariation<
  "alignLeft",
  Simplify<CallToActionSliceAlignLeftPrimary>,
  never
>;

/**
 * Slice variation for *CallToAction*
 */
type CallToActionSliceVariation =
  | CallToActionSliceDefault
  | CallToActionSliceAlignLeft;

/**
 * CallToAction Shared Slice
 *
 * - **API ID**: `call_to_action`
 * - **Description**: CallToAction
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type CallToActionSlice = prismic.SharedSlice<
  "call_to_action",
  CallToActionSliceVariation
>;

/**
 * Item in *CardWithCategory → Card → Primary → Categorie*
 */
export interface CardWithCategorySliceDefaultPrimaryCategoryItem {
  /**
   * label field in *CardWithCategory → Card → Primary → Categorie*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **Default Value**: Architecture
   * - **API ID Path**: card_with_category.default.primary.category[].label
   * - **Documentation**: https://prismic.io/docs/fields/select
   */
  label: prismic.SelectField<
    "Architecture" | "Programmation" | "Paysage" | "AMO",
    "filled"
  >;
}

/**
 * Primary content in *CardWithCategory → Card → Primary*
 */
export interface CardWithCategorySliceDefaultPrimary {
  /**
   * Main Image field in *CardWithCategory → Card → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: card_with_category.default.primary.main_image
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  main_image: prismic.ImageField<never>;

  /**
   * Title field in *CardWithCategory → Card → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: card_with_category.default.primary.title
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  title: prismic.RichTextField;

  /**
   * Categorie field in *CardWithCategory → Card → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: card_with_category.default.primary.category[]
   * - **Documentation**: https://prismic.io/docs/fields/repeatable-group
   */
  category: prismic.GroupField<
    Simplify<CardWithCategorySliceDefaultPrimaryCategoryItem>
  >;
}

/**
 * Card variation for CardWithCategory Slice
 *
 * - **API ID**: `default`
 * - **Description**: Standard card showing image, category, and title.
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type CardWithCategorySliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<CardWithCategorySliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *CardWithCategory*
 */
type CardWithCategorySliceVariation = CardWithCategorySliceDefault;

/**
 * CardWithCategory Shared Slice
 *
 * - **API ID**: `card_with_category`
 * - **Description**: *None*
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type CardWithCategorySlice = prismic.SharedSlice<
  "card_with_category",
  CardWithCategorySliceVariation
>;

/**
 * Item in *CarouselGallery → Default → Primary → Slides*
 */
export interface CarouselGallerySliceDefaultPrimarySlidesItem {
  /**
   * Image field in *CarouselGallery → Default → Primary → Slides*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: carousel_gallery.default.primary.slides[].image
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  image: prismic.ImageField<never>;
}

/**
 * Primary content in *CarouselGallery → Default → Primary*
 */
export interface CarouselGallerySliceDefaultPrimary {
  /**
   * Slides field in *CarouselGallery → Default → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: carousel_gallery.default.primary.slides[]
   * - **Documentation**: https://prismic.io/docs/fields/repeatable-group
   */
  slides: prismic.GroupField<
    Simplify<CarouselGallerySliceDefaultPrimarySlidesItem>
  >;
}

/**
 * Default variation for CarouselGallery Slice
 *
 * - **API ID**: `default`
 * - **Description**: A standard image carousel/gallery, each slide may contain a single image. Navigation arrows enable scrolling to previous or next images.
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type CarouselGallerySliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<CarouselGallerySliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *CarouselGallery*
 */
type CarouselGallerySliceVariation = CarouselGallerySliceDefault;

/**
 * CarouselGallery Shared Slice
 *
 * - **API ID**: `carousel_gallery`
 * - **Description**: *None*
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type CarouselGallerySlice = prismic.SharedSlice<
  "carousel_gallery",
  CarouselGallerySliceVariation
>;

/**
 * Item in *FeaturedContentGallery → Default → Primary → Gallery Images*
 */
export interface FeaturedContentGallerySliceDefaultPrimaryGalleryImagesItem {
  /**
   * Image field in *FeaturedContentGallery → Default → Primary → Gallery Images*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: featured_content_gallery.default.primary.gallery_images[].image
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  image: prismic.ImageField<never>;
}

/**
 * Primary content in *FeaturedContentGallery → Default → Primary*
 */
export interface FeaturedContentGallerySliceDefaultPrimary {
  /**
   * Eyebrow field in *FeaturedContentGallery → Default → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: featured_content_gallery.default.primary.eyebrow
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  eyebrow: prismic.KeyTextField;

  /**
   * Title field in *FeaturedContentGallery → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: featured_content_gallery.default.primary.title
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  title: prismic.RichTextField;

  /**
   * Description field in *FeaturedContentGallery → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: featured_content_gallery.default.primary.description
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  description: prismic.RichTextField;

  /**
   * Call to Action Link field in *FeaturedContentGallery → Default → Primary*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: featured_content_gallery.default.primary.cta_link
   * - **Documentation**: https://prismic.io/docs/fields/link
   */
  cta_link: prismic.LinkField<
    string,
    string,
    unknown,
    prismic.FieldState,
    never
  >;

  /**
   * Gallery Images field in *FeaturedContentGallery → Default → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: featured_content_gallery.default.primary.gallery_images[]
   * - **Documentation**: https://prismic.io/docs/fields/repeatable-group
   */
  gallery_images: prismic.GroupField<
    Simplify<FeaturedContentGallerySliceDefaultPrimaryGalleryImagesItem>
  >;
}

/**
 * Default variation for FeaturedContentGallery Slice
 *
 * - **API ID**: `default`
 * - **Description**: Displays introductory text content left-aligned with a grid of three images on the right.
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type FeaturedContentGallerySliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<FeaturedContentGallerySliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *FeaturedContentGallery*
 */
type FeaturedContentGallerySliceVariation = FeaturedContentGallerySliceDefault;

/**
 * FeaturedContentGallery Shared Slice
 *
 * - **API ID**: `featured_content_gallery`
 * - **Description**: *None*
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type FeaturedContentGallerySlice = prismic.SharedSlice<
  "featured_content_gallery",
  FeaturedContentGallerySliceVariation
>;

/**
 * Primary content in *Hero → Default → Primary*
 */
export interface HeroSliceDefaultPrimary {
  /**
   * eyebrowHeadline field in *Hero → Default → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: Eyebrow
   * - **API ID Path**: hero.default.primary.eyebrowHeadline
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  eyebrowHeadline: prismic.KeyTextField;

  /**
   * title field in *Hero → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.default.primary.title
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  title: prismic.RichTextField;

  /**
   * description field in *Hero → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.default.primary.description
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  description: prismic.RichTextField;

  /**
   * image field in *Hero → Default → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.default.primary.image
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  image: prismic.ImageField<never>;

  /**
   * callToActionLink field in *Hero → Default → Primary*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.default.primary.callToActionLink
   * - **Documentation**: https://prismic.io/docs/fields/link
   */
  callToActionLink: prismic.LinkField<
    string,
    string,
    unknown,
    prismic.FieldState,
    never
  >;
}

/**
 * Default variation for Hero Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type HeroSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<HeroSliceDefaultPrimary>,
  never
>;

/**
 * Primary content in *Hero → Image Right → Primary*
 */
export interface HeroSliceImageRightPrimary {
  /**
   * eyebrowHeadline field in *Hero → Image Right → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: Eyebrow
   * - **API ID Path**: hero.imageRight.primary.eyebrowHeadline
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  eyebrowHeadline: prismic.KeyTextField;

  /**
   * title field in *Hero → Image Right → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.imageRight.primary.title
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  title: prismic.RichTextField;

  /**
   * description field in *Hero → Image Right → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.imageRight.primary.description
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  description: prismic.RichTextField;

  /**
   * image field in *Hero → Image Right → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.imageRight.primary.image
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  image: prismic.ImageField<never>;

  /**
   * callToActionLink field in *Hero → Image Right → Primary*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.imageRight.primary.callToActionLink
   * - **Documentation**: https://prismic.io/docs/fields/link
   */
  callToActionLink: prismic.LinkField<
    string,
    string,
    unknown,
    prismic.FieldState,
    never
  >;
}

/**
 * Image Right variation for Hero Slice
 *
 * - **API ID**: `imageRight`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type HeroSliceImageRight = prismic.SharedSliceVariation<
  "imageRight",
  Simplify<HeroSliceImageRightPrimary>,
  never
>;

/**
 * Slice variation for *Hero*
 */
type HeroSliceVariation = HeroSliceDefault | HeroSliceImageRight;

/**
 * Hero Shared Slice
 *
 * - **API ID**: `hero`
 * - **Description**: Hero
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type HeroSlice = prismic.SharedSlice<"hero", HeroSliceVariation>;

/**
 * Primary content in *MenuItem → Top Menu Item → Primary*
 */
export interface NavigationMenuSliceWithDropdownsPrimary {
  /**
   * Label field in *MenuItem → Top Menu Item → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: navigation_menu.with_dropdowns.primary.label
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  label: prismic.KeyTextField;

  /**
   * Link field in *MenuItem → Top Menu Item → Primary*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: navigation_menu.with_dropdowns.primary.link
   * - **Documentation**: https://prismic.io/docs/fields/link
   */
  link: prismic.LinkField<string, string, unknown, prismic.FieldState, never>;
}

/**
 * Top Menu Item variation for MenuItem Slice
 *
 * - **API ID**: `with_dropdowns`
 * - **Description**: Navigation menu where items may be standard links or contain dropdown/mega menu content.
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type NavigationMenuSliceWithDropdowns = prismic.SharedSliceVariation<
  "with_dropdowns",
  Simplify<NavigationMenuSliceWithDropdownsPrimary>,
  never
>;

/**
 * Slice variation for *MenuItem*
 */
type NavigationMenuSliceVariation = NavigationMenuSliceWithDropdowns;

/**
 * MenuItem Shared Slice
 *
 * - **API ID**: `navigation_menu`
 * - **Description**: *None*
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type NavigationMenuSlice = prismic.SharedSlice<
  "navigation_menu",
  NavigationMenuSliceVariation
>;

/**
 * Primary content in *Texte → Default → Primary*
 */
export interface TexteSliceDefaultPrimary {
  /**
   * Description field in *Texte → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: texte.default.primary.description
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  description: prismic.RichTextField;
}

/**
 * Default variation for Texte Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type TexteSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<TexteSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *Texte*
 */
type TexteSliceVariation = TexteSliceDefault;

/**
 * Texte Shared Slice
 *
 * - **API ID**: `texte`
 * - **Description**: Texte
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type TexteSlice = prismic.SharedSlice<"texte", TexteSliceVariation>;

declare module "@prismicio/client" {
  interface CreateClient {
    (
      repositoryNameOrEndpoint: string,
      options?: prismic.ClientConfig,
    ): prismic.Client<AllDocumentTypes>;
  }

  interface CreateWriteClient {
    (
      repositoryNameOrEndpoint: string,
      options: prismic.WriteClientConfig,
    ): prismic.WriteClient<AllDocumentTypes>;
  }

  interface CreateMigration {
    (): prismic.Migration<AllDocumentTypes>;
  }

  namespace Content {
    export type {
      AgencyDocument,
      AgencyDocumentData,
      AgencyDocumentDataSlicesSlice,
      HomepageDocument,
      HomepageDocumentData,
      HomepageDocumentDataSlicesSlice,
      LayoutDocument,
      LayoutDocumentData,
      LayoutDocumentDataSlicesSlice,
      ProjectsDocument,
      ProjectsDocumentData,
      ProjectsDocumentDataSlicesSlice,
      ProjetDocument,
      ProjetDocumentData,
      ProjetDocumentDataSlicesSlice,
      AllDocumentTypes,
      AlternateGridSlice,
      AlternateGridSliceDefaultPrimary,
      AlternateGridSliceImageRightPrimaryItemsItem,
      AlternateGridSliceImageRightPrimary,
      AlternateGridSliceVariation,
      AlternateGridSliceDefault,
      AlternateGridSliceImageRight,
      CallToActionSlice,
      CallToActionSliceDefaultPrimary,
      CallToActionSliceAlignLeftPrimary,
      CallToActionSliceVariation,
      CallToActionSliceDefault,
      CallToActionSliceAlignLeft,
      CardWithCategorySlice,
      CardWithCategorySliceDefaultPrimaryCategoryItem,
      CardWithCategorySliceDefaultPrimary,
      CardWithCategorySliceVariation,
      CardWithCategorySliceDefault,
      CarouselGallerySlice,
      CarouselGallerySliceDefaultPrimarySlidesItem,
      CarouselGallerySliceDefaultPrimary,
      CarouselGallerySliceVariation,
      CarouselGallerySliceDefault,
      FeaturedContentGallerySlice,
      FeaturedContentGallerySliceDefaultPrimaryGalleryImagesItem,
      FeaturedContentGallerySliceDefaultPrimary,
      FeaturedContentGallerySliceVariation,
      FeaturedContentGallerySliceDefault,
      HeroSlice,
      HeroSliceDefaultPrimary,
      HeroSliceImageRightPrimary,
      HeroSliceVariation,
      HeroSliceDefault,
      HeroSliceImageRight,
      NavigationMenuSlice,
      NavigationMenuSliceWithDropdownsPrimary,
      NavigationMenuSliceVariation,
      NavigationMenuSliceWithDropdowns,
      TexteSlice,
      TexteSliceDefaultPrimary,
      TexteSliceVariation,
      TexteSliceDefault,
    };
  }
}
